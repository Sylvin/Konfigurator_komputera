<?xml version="1.0" encoding="UTF-8"?>
<!--
This file was generated by Altova MapForce 2015r3sp1

YOU SHOULD NOT MODIFY THIS FILE, BECAUSE IT WILL BE
OVERWRITTEN WHEN YOU RE-RUN CODE GENERATION.

Refer to the Altova MapForce Documentation for further details.
http://www.altova.com/mapforce
-->
<xsl:stylesheet version="2.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:fn="http://www.w3.org/2005/xpath-functions" exclude-result-prefixes="xs fn">
	<xsl:output method="xml" encoding="UTF-8" byte-order-mark="no" indent="yes"/>
	<xsl:template match="/">
		<xsl:variable name="var1_konfigurator" as="node()?" select="konfigurator"/>
		<Benchmark3DMark11>
			<xsl:attribute name="xsi:noNamespaceSchemaLocation" namespace="http://www.w3.org/2001/XMLSchema-instance" select="'C:/Users/Turos19/Desktop/konfigurator_komputera.xsd'"/>
			<xsl:for-each select="$var1_konfigurator">
				<CPU>
					<xsl:attribute name="taktowanie" select="xs:string(xs:integer(fn:string(specyfikacja/procesor/taktowanie)))"/>
					<xsl:attribute name="liczba_rdzeni" select="xs:string(xs:integer(fn:string(specyfikacja/procesor/liczba_rdzeni)))"/>
					<xsl:for-each select="specyfikacja/procesor/firma/AMD">
						<AMD>
							<xsl:sequence select="fn:string(.)"/>
						</AMD>
					</xsl:for-each>
					<xsl:for-each select="specyfikacja/procesor/firma/Intel">
						<Intel>
							<xsl:sequence select="fn:string(.)"/>
						</Intel>
					</xsl:for-each>
				</CPU>
			</xsl:for-each>
			<xsl:for-each select="$var1_konfigurator">
				<GPU>
					<xsl:for-each select="specyfikacja/karta_graficzna/model/nVidia_GeForce">
						<GeForce>
							<xsl:sequence select="fn:string(.)"/>
						</GeForce>
					</xsl:for-each>
					<xsl:for-each select="specyfikacja/karta_graficzna/model/AMD_Radeon">
						<Radeon>
							<xsl:sequence select="fn:string(.)"/>
						</Radeon>
					</xsl:for-each>
				</GPU>
			</xsl:for-each>
			<xsl:for-each select="$var1_konfigurator">
				<Score>
					<xsl:sequence select="xs:string(xs:integer(fn:string(Score3DMark)))"/>
				</Score>
			</xsl:for-each>
		</Benchmark3DMark11>
	</xsl:template>
</xsl:stylesheet>
